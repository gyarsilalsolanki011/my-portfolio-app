name: 🚀 Build, Push & Deploy Portfolio

on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout code
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up JDK
      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      # 3️⃣ Cache Maven Dependencies
      - name: 🧠 Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4️⃣ Build Spring Boot JAR
      - name: 🏗️ Build Spring Boot app
        run: mvn clean package -DskipTests

      # 5️⃣ Log in to Docker Hub
      - name: 🔑 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6️⃣ Build & Push Docker image (tagged latest & versioned)
      - name: 🐳 Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            gyarsilalsolanki011/my-portfolio-app:latest
            gyarsilalsolanki011/my-portfolio-app:1.0.${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: 🚀 Trigger Render Deploy (Pull New Docker Image)
        run: |
          echo "Triggering Render deploy with latest Docker image..."
          curl -X POST \
          -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{}' \
          https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys